{"aws_availability_zones": [{"__tfmeta": {"filename": "data.tf", "label": "aws_availability_zones", "line_end": 2, "line_start": 2, "path": "data.aws_availability_zones.this", "type": "data"}, "id": "5b0f5bec-1ebb-4be6-818b-92fd679eeb1b"}], "aws_instance": [{"__tfmeta": {"filename": "main.tf", "label": "aws_instance", "line_end": 46, "line_start": 3, "path": "aws_instance.this", "type": "resource"}, "ami": "ami-0bdf93799014acdc4", "availability_zone": null, "connection": {"__tfmeta": {"filename": "main.tf", "line_end": 22, "line_start": 18}, "agent": false, "id": "5f9455b1-1dd7-4281-9945-71c8c47c60e0", "private_key": null, "user": "ubuntu"}, "id": "157e9d03-1ac9-497d-a745-0054158634da", "instance_type": "t2.micro", "key_name": {"__attribute__": "aws_key_pair.this.id", "__name__": "this", "__ref__": "28883688-2f16-41bd-8c0a-37fb7ac8d848", "__type__": "aws_key_pair"}, "provisioner": [{"__tfmeta": {"filename": "main.tf", "label": "remote-exec", "line_end": 29, "line_start": 24}, "id": "ef8109d0-857a-4658-a4ae-df796bb21783", "inline": ["sudo hostnamectl set-hostname aws-ec2-ebs-docker-host", "echo 127.0.0.1 aws-ec2-ebs-docker-host | sudo tee -a /etc/hosts"]}, {"__tfmeta": {"filename": "main.tf", "label": "remote-exec", "line_end": 33, "line_start": 31}, "id": "902677da-23b1-43ae-b332-75af569a22dd", "script": "./provision-docker.sh"}, {"__tfmeta": {"filename": "main.tf", "label": "file", "line_end": 38, "line_start": 35}, "destination": "/home/ubuntu/provision-swap.sh", "id": "13584552-e024-44fd-9b78-80bb3b5f6111", "source": "./provision-swap.sh"}, {"__tfmeta": {"filename": "main.tf", "label": "remote-exec", "line_end": 45, "line_start": 40}, "id": "5e108e92-2c3e-453e-9ea8-190b4a33c12e", "inline": ["sh /home/ubuntu/provision-swap.sh 512M 10", "rm /home/ubuntu/provision-swap.sh"]}], "root_block_device": {"__tfmeta": {"filename": "main.tf", "line_end": 16, "line_start": 14}, "id": "124c4999-a2e7-4a45-b11a-03ea3f878f9e", "volume_size": 8}, "subnet_id": {"__attribute__": "data.aws_subnet.this.id", "__name__": "this", "__ref__": "032ba2f0-6a7a-405f-ae33-f702a6d87e0e", "__type__": "aws_subnet"}, "tags": null, "user_data": "c76c92caab5680f9623e7da1edf121efe95546f6", "volume_tags": null, "vpc_security_group_ids": {"__attributes__": ["aws_security_group.this.id"], "__name__": "this", "__ref__": "aa984e0b-8de8-4378-b6f5-ca34ac8ea903", "__type__": "aws_security_group"}}], "aws_key_pair": [{"__tfmeta": {"filename": "security.tf", "label": "aws_key_pair", "line_end": 4, "line_start": 2, "path": "aws_key_pair.this", "type": "resource"}, "id": "28883688-2f16-41bd-8c0a-37fb7ac8d848", "public_key": null}], "aws_security_group": [{"__tfmeta": {"filename": "security.tf", "label": "aws_security_group", "line_end": 10, "line_start": 7, "path": "aws_security_group.this", "type": "resource"}, "id": "aa984e0b-8de8-4378-b6f5-ca34ac8ea903", "tags": null, "vpc_id": {"__attribute__": "data.aws_vpc.this.id", "__name__": "this", "__ref__": "896e0134-88e6-4153-842d-507e5ac5afcb", "__type__": "aws_vpc"}}], "aws_security_group_rule": [{"__tfmeta": {"filename": "security.tf", "label": "aws_security_group_rule", "line_end": 30, "line_start": 23, "path": "aws_security_group_rule.incoming_ssh", "type": "resource"}, "cidr_blocks": ["0.0.0.0/0"], "from_port": 22, "id": "1a15363d-b227-493a-aaf0-3a53cb1a2f60", "protocol": "tcp", "security_group_id": {"__attribute__": "aws_security_group.this.id", "__name__": "this", "__ref__": "aa984e0b-8de8-4378-b6f5-ca34ac8ea903", "__type__": "aws_security_group"}, "to_port": 22, "type": "ingress"}, {"__tfmeta": {"filename": "security.tf", "label": "aws_security_group_rule", "line_end": 21, "line_start": 14, "path": "aws_security_group_rule.outgoing_any", "type": "resource"}, "cidr_blocks": ["0.0.0.0/0"], "from_port": 0, "id": "d26ad9d1-fa58-4fb2-b0f8-2581879f2c8c", "protocol": "-1", "security_group_id": {"__attribute__": "aws_security_group.this.id", "__name__": "this", "__ref__": "aa984e0b-8de8-4378-b6f5-ca34ac8ea903", "__type__": "aws_security_group"}, "to_port": 0, "type": "egress"}], "aws_subnet": [{"__tfmeta": {"filename": "data.tf", "label": "aws_subnet", "line_end": 14, "line_start": 11, "path": "data.aws_subnet.this", "type": "data"}, "availability_zone": null, "id": "032ba2f0-6a7a-405f-ae33-f702a6d87e0e", "vpc_id": {"__attribute__": "data.aws_vpc.this.id", "__name__": "this", "__ref__": "896e0134-88e6-4153-842d-507e5ac5afcb", "__type__": "aws_vpc"}}], "aws_vpc": [{"__tfmeta": {"filename": "data.tf", "label": "aws_vpc", "line_end": 9, "line_start": 6, "path": "data.aws_vpc.this", "type": "data"}, "default": true, "id": "896e0134-88e6-4153-842d-507e5ac5afcb"}], "locals": [{"__tfmeta": {"filename": "variables.tf", "line_end": 21, "line_start": 19, "path": "locals"}, "availability_zone": {"__attribute__": "data.aws_availability_zones.this.names[0]", "__name__": "this", "__ref__": "5b0f5bec-1ebb-4be6-818b-92fd679eeb1b", "__type__": "aws_availability_zones"}, "id": "29d9cfc3-fa04-4977-b453-cc7a084d8053"}, {"__tfmeta": {"filename": "variables.tf", "line_end": 17, "line_start": 2, "path": "locals"}, "id": "fab1ca06-d4c9-45c6-a2ce-9c83207be33e", "reprovision_trigger": "    # Trigger reprovision on variable changes:\n    aws-ec2-ebs-docker-host\n    ubuntu\n    ssh.private.key\n    ssh.public.key\n    512M\n    10\n    \n    # Trigger reprovision on file changes:\n    #!/bin/bash\n\n# https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-using-the-convenience-script\ncurl -fsSL get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nrm get-docker.sh\n\n# Allow using docker without sudo\nsudo usermod -aG docker $(whoami)\n\n# https://success.docker.com/article/how-to-setup-log-rotation-post-installation\necho '{\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"10m\",\n    \"max-file\": \"5\"\n  }\n}\n' | sudo tee /etc/docker/daemon.json\nsudo service docker restart # restart the daemon so the settings take effect\n\n    #!/bin/bash\n\n# Perform setup\nset -x\nDEV_NAME=\"$(lsblk --output NAME --list | tail -n 1)\" # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html\nDEV_FS_TYPE=\"ext4\"\nMOUNT_POINT=\"/data\"\nset +x\n\n# Format EBS volume, if not already formatted\nsudo file -s \"/dev/$DEV_NAME\" | grep \"$DEV_FS_TYPE\"\nif [ $? -eq 0 ]; then\n  echo \"File system already exists on /dev/$DEV_NAME, not going to format\"\nelse\n  echo \"No file system on /dev/$DEV_NAME, formatting\"\n  sudo mkfs -t \"$DEV_FS_TYPE\" \"/dev/$DEV_NAME\"\nfi\n\n# Wait until we can determine the UUID of the EBS device that was attached\nwhile true; do\n  uuid=\"$(ls -la /dev/disk/by-uuid/ | grep $DEV_NAME | sed -e 's/.*\\([0-9a-f-]\\{36\\}\\).*/\\1/')\" # seems more reliable than using blkid :shrug:\n  if [ ! -z \"$uuid\" ]; then\n    echo \"EBS device \\\"$uuid\\\" found\"\n    break\n  fi\n  echo \"Waiting for EBS device...\"\n  sleep 1\ndone\n\n# Mount EBS volume, and set it to auto-mount after reboots\nsudo mkdir \"$MOUNT_POINT\"\necho \"UUID=$uuid  $MOUNT_POINT  $DEV_FS_TYPE  defaults,nofail  0  2\" | sudo tee -a /etc/fstab\nsudo mount -a\n\n# List the filesystems, for debugging convenience\ndf -h\n\n    #!/bin/bash\n\nset -e\n\nif [ $# -ne 2 ]; then\n  >&2 echo \"usage: provision-swap.sh SWAP_FILE_SIZE SWAPPINESS\"\n  exit 1\nfi\n\nSWAP_FILE_SIZE=$1\nSWAPPINESS=$2\n\necho \"Setting up a swap file (size: $SWAP_FILE_SIZE, swappiness: $SWAPPINESS)...\"\n\n# Create the swap file\nsudo fallocate -l ${SWAP_FILE_SIZE} /swapfile\n\n# Only root should be able to access to this file\nsudo chmod 600 /swapfile\n\n# Define the file as swap space\nsudo mkswap /swapfile\n\n# Enable the swap file, allowing the system to start using it\nsudo swapon /swapfile\n\n# Make the swap file permanent, otherwise, previous settings will be lost on reboot\n# Create a backup of the existing fstab, JustInCase(tm)\nsudo cp /etc/fstab /etc/fstab.bak\n# Add the swap file information at the end of the fstab\necho '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab\n\n# Adjust the swappiness\n# With the default value of 10, the host will use swap if it has almost no other choice. Value is between 0 and 100.\n# 100 will make the host use the swap as much as possible, 0 will make it use only in case of emergency.\n# As swap access is slower than RAM access, having a low value here for a server is better.\nsudo sysctl vm.swappiness=${SWAPPINESS}\n\n# Make this setting permanent, to not lose it on reboot\nsudo cp /etc/sysctl.conf /etc/sysctl.conf.bak\necho \"vm.swappiness=${SWAPPINESS}\" | sudo tee -a /etc/sysctl.conf\n\n"}], "output": [{"__tfmeta": {"filename": "outputs.tf", "label": "availability_zone", "line_end": 19, "line_start": 16, "path": "output.availability_zone"}, "description": "AWS Availability Zone in which the EC2 instance was created", "id": "7d10f516-a7b7-4331-85e3-c7c22d986f2d", "value": null}, {"__tfmeta": {"filename": "outputs.tf", "label": "hostname", "line_end": 4, "line_start": 1, "path": "output.hostname"}, "description": "Hostname by which this service is identified in metrics, logs etc", "id": "d808526d-3459-483d-a8ba-d563e0be9c62", "value": "aws-ec2-ebs-docker-host"}, {"__tfmeta": {"filename": "outputs.tf", "label": "instance_id", "line_end": 14, "line_start": 11, "path": "output.instance_id"}, "description": "AWS ID for the EC2 instance used", "id": "3e5c2b94-a0c0-4c7a-87cc-472f7644f991", "value": {"__attribute__": "aws_instance.this.id", "__name__": "this", "__ref__": "157e9d03-1ac9-497d-a745-0054158634da", "__type__": "aws_instance"}}, {"__tfmeta": {"filename": "outputs.tf", "label": "public_ip", "line_end": 9, "line_start": 6, "path": "output.public_ip"}, "description": "Public IP address assigned to the host by EC2", "id": "5dde225b-91c8-4272-b9db-c12f1bafef2a", "value": {"__attribute__": "aws_instance.this.public_ip", "__name__": "this", "__ref__": "157e9d03-1ac9-497d-a745-0054158634da", "__type__": "aws_instance"}}, {"__tfmeta": {"filename": "outputs.tf", "label": "security_group_id", "line_end": 39, "line_start": 36, "path": "output.security_group_id"}, "description": "Security Group ID, for attaching additional security rules externally", "id": "1f302fc6-a723-4f7e-ac9b-88ea61269c23", "value": {"__attribute__": "aws_security_group.this.id", "__name__": "this", "__ref__": "aa984e0b-8de8-4378-b6f5-ca34ac8ea903", "__type__": "aws_security_group"}}, {"__tfmeta": {"filename": "outputs.tf", "label": "ssh_private_key", "line_end": 34, "line_start": 31, "path": "output.ssh_private_key"}, "description": "SSH private key that can be used to access the EC2 instance", "id": "b860b768-21b7-4e32-bf0b-06d02bac3edd", "value": null}, {"__tfmeta": {"filename": "outputs.tf", "label": "ssh_private_key_path", "line_end": 29, "line_start": 26, "path": "output.ssh_private_key_path"}, "description": "Path to SSH private key that can be used to access the EC2 instance", "id": "2cc1b9b4-30eb-4880-853b-1221c89bb8a1", "value": "ssh.private.key"}, {"__tfmeta": {"filename": "outputs.tf", "label": "ssh_username", "line_end": 24, "line_start": 21, "path": "output.ssh_username"}, "description": "Username that can be used to access the EC2 instance over SSH", "id": "ed2653c9-4582-48fe-8516-490362a0c846", "value": "ubuntu"}], "variable": [{"__tfmeta": {"filename": "variables.tf", "label": "allow_incoming_dns", "line_end": 96, "line_start": 93, "path": "variable.allow_incoming_dns"}, "default": false, "description": "Whether to allow incoming DNS traffic on the host security group", "id": "1f552124-a9f3-4df7-bed6-0b62d13954e6"}, {"__tfmeta": {"filename": "variables.tf", "label": "allow_incoming_http", "line_end": 86, "line_start": 83, "path": "variable.allow_incoming_http"}, "default": false, "description": "Whether to allow incoming HTTP traffic on the host security group", "id": "05bfa323-191c-4345-b0a5-70bcd707af4f"}, {"__tfmeta": {"filename": "variables.tf", "label": "allow_incoming_https", "line_end": 91, "line_start": 88, "path": "variable.allow_incoming_https"}, "default": false, "description": "Whether to allow incoming HTTPS traffic on the host security group", "id": "9701806f-82dd-459f-bc12-8f65d4473ff7"}, {"__tfmeta": {"filename": "variables.tf", "label": "data_volume_id", "line_end": 71, "line_start": 68, "path": "variable.data_volume_id"}, "default": "", "description": "The ID of the EBS volume to mount as `/data`", "id": "639c776c-9695-452b-85f6-cc93dcfeeb29"}, {"__tfmeta": {"filename": "variables.tf", "label": "hostname", "line_end": 26, "line_start": 23, "path": "variable.hostname"}, "default": "aws-ec2-ebs-docker-host", "description": "Hostname by which this service is identified in metrics, logs etc", "id": "64a01cf6-38c6-4445-98c7-694ef7caa44c"}, {"__tfmeta": {"filename": "variables.tf", "label": "instance_ami", "line_end": 36, "line_start": 33, "path": "variable.instance_ami"}, "default": "ami-0bdf93799014acdc4", "description": "See https://cloud-images.ubuntu.com/locator/ec2/ for options", "id": "81a4db7d-10c4-444e-8adf-9e228e2a6ca0"}, {"__tfmeta": {"filename": "variables.tf", "label": "instance_type", "line_end": 31, "line_start": 28, "path": "variable.instance_type"}, "default": "t2.micro", "description": "See https://aws.amazon.com/ec2/instance-types/ for options; for example, typical values for small workloads are `\"t2.nano\"`, `\"t2.micro\"`, `\"t2.small\"`, `\"t2.medium\"`, and `\"t2.large\"`", "id": "010b098d-9ef2-4ec4-9fcb-0d4957665942"}, {"__tfmeta": {"filename": "variables.tf", "label": "reprovision_trigger", "line_end": 61, "line_start": 58, "path": "variable.reprovision_trigger"}, "default": "", "description": "An arbitrary string value; when this value changes, the host needs to be reprovisioned", "id": "c1d30394-c969-4699-8825-f2b1de814bdc"}, {"__tfmeta": {"filename": "variables.tf", "label": "root_volume_size", "line_end": 66, "line_start": 63, "path": "variable.root_volume_size"}, "default": 8, "description": "Size (in GiB) of the EBS volume that will be created and mounted as the root fs for the host", "id": "0caa9d6e-d40b-4c3e-ac41-9bb15619046d"}, {"__tfmeta": {"filename": "variables.tf", "label": "ssh_private_key_path", "line_end": 41, "line_start": 38, "path": "variable.ssh_private_key_path"}, "default": "ssh.private.key", "description": "SSH private key file path, relative to Terraform project root", "id": "fe36a7a5-6641-4d46-9f26-21d8ec5bc407"}, {"__tfmeta": {"filename": "variables.tf", "label": "ssh_public_key_path", "line_end": 46, "line_start": 43, "path": "variable.ssh_public_key_path"}, "default": "ssh.public.key", "description": "SSH public key file path, relative to Terraform project root", "id": "e7cd0d3b-7454-4dae-8df3-f85da5805c34"}, {"__tfmeta": {"filename": "variables.tf", "label": "ssh_username", "line_end": 51, "line_start": 48, "path": "variable.ssh_username"}, "default": "ubuntu", "description": "Default username built into the AMI (see 'instance_ami')", "id": "74e711d5-fce5-4141-81d7-bbfadc9a3d55"}, {"__tfmeta": {"filename": "variables.tf", "label": "swap_file_size", "line_end": 76, "line_start": 73, "path": "variable.swap_file_size"}, "default": "512M", "description": "Size of the swap file allocated on the root volume", "id": "6a034156-51b6-4df6-82e0-31d5f2b9fcb1"}, {"__tfmeta": {"filename": "variables.tf", "label": "swap_swappiness", "line_end": 81, "line_start": 78, "path": "variable.swap_swappiness"}, "default": "10", "description": "Swappiness value provided when creating the swap file", "id": "37896c35-5bb4-4811-9d80-1bfa6a1ac20b"}, {"__tfmeta": {"filename": "variables.tf", "label": "tags", "line_end": 102, "line_start": 98, "path": "variable.tags"}, "default": {}, "description": "AWS Tags to add to all resources created (where possible); see https://aws.amazon.com/answers/account-management/aws-tagging-strategies/", "id": "83e2a5ea-c898-441c-a928-4a77ebbe4d0f", "type": "map"}, {"__tfmeta": {"filename": "variables.tf", "label": "vpc_id", "line_end": 56, "line_start": 53, "path": "variable.vpc_id"}, "default": "", "description": "ID of the VPC our host should join; if empty, joins your Default VPC", "id": "d2856394-e899-4b0d-81a3-d6c330903db1"}]}